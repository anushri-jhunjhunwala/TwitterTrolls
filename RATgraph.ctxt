#BlueJ class context
comment0.target=RATgraph
comment1.params=f
comment1.target=RATgraph(java.lang.String)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ RATgraph\n
comment10.params=f
comment10.target=void\ RATToTGF(java.lang.String)
comment10.text=\n\ Writes\ the\ RAT\ graph\ to\ a\ tgf\ file\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\ \n\ Returns\ a\ string\ representation\ of\ the\ rat\ graph\n\ \n\ @return\ a\ string\ represenation\ of\ this\ graph,\ containing\ its\ vertices\n\ and\ its\ arcs/edges\n\ \n
comment12.params=args
comment12.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=void\ readToGraph()
comment2.text=\n\ Reads\ graph\ data\ from\ the\ input\ file\ \ \n\ @exception\ FileNotFoundException\ thrown\ when\ the\ input\ file\ \n\ is\ not\ found\n
comment3.params=vertex
comment3.target=java.util.LinkedList\ getRatSuccessors(java.lang.String)
comment3.text=\ \n\ Return\ all\ the\ vertices,\ in\ this\ graph,\ adjacent\ to\ the\ given\ vertex.\n\ \n\ @param\ A\ vertex\ in\ th\ egraph\ whose\ successors\ will\ be\ returned.\n\ @return\ LinkedList\ containing\ all\ the\ vertices\ x\ in\ the\ graph,\n\ for\ which\ an\ arc\ exists\ from\ the\ given\ vertex\ to\ x\ (vertex\ ->\ x).\n\n
comment4.params=vertex
comment4.target=java.util.LinkedList\ getRatPredecessors(java.lang.String)
comment4.text=\ \n\ Return\ all\ the\ vertices\ x,\ in\ this\ graph,\ that\ precede\ a\ given\n\ vertex.\n\ \n\ @param\ A\ vertex\ in\ the\ graph\ whose\ predecessors\ will\ be\ returned.\n\ @return\ LinkedList\ containing\ all\ the\ vertices\ x\ in\ the\ graph,\n\ for\ which\ an\ arc\ exists\ from\ x\ to\ the\ given\ vertex\ (x\ ->\ vertex).\n\ \n
comment5.params=vertex
comment5.target=java.util.LinkedList\ ratDFS(java.lang.String)
comment5.text=\ \n\ returns\ the\ path\ of\ the\ depth\ first\ traversal\ in\ the\ graph\ from\ given\ vertex\ \n\ \n\ @param\ the\ vertex\ from\ which\ the\ depth\ first\ traversal\ should\ begin\ \n\ @return\ LinkedList<String>\ of\ the\ path\ of\ the\ DFS\n
comment6.params=vertex
comment6.target=java.util.LinkedList\ ratBFS(java.lang.String)
comment6.text=\ \n\ returns\ the\ path\ of\ the\ breadth\ first\ traversal\ in\ the\ graph\ from\ given\ vertex\ \n\ \n\ @param\ the\ vertex\ from\ which\ the\ breadth\ first\ traversal\ should\ begin\ \n\ @return\ LinkedList<String>\ of\ the\ path\ of\ the\ BFS\ \n
comment7.params=v1\ v2
comment7.target=int\ diamBetween(java.lang.String,\ java.lang.String)
comment7.text=\n\ checks\ diameter\ of\ a\ BFS\ search\ between\ two\ nodes\n\ \n\ @param\ \ String\ -\ starting\ node,\ String\ -\ target\ node\n\ @return\ int\ -\ the\ diameter\ of\ the\ search\ from\ a\ given\ node\ to\ the\ target\n
comment8.params=
comment8.target=java.util.Hashtable\ getUserTable()
comment8.text=\n\ gets\ the\ hashtable\ of\ users\n\ \n\ @return\ Hashtable<String,TwitterUser>\ -\ users\n
comment9.params=
comment9.target=java.util.Vector\ getStories()
comment9.text=\n\ gets\ the\ vector\ of\ stories\n\ \n\ @return\ Vector<String>\ -\ stories\n
numComments=13
